{
    "openapi": "3.0.0",
    "paths": {
        "/api/user": {
            "get": {
                "operationId": "UserController_findAll",
                "summary": "Returns all users in the DB",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "All users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "user"
                ]
            }
        },
        "/api/user/{id}": {
            "get": {
                "operationId": "UserController_findOne",
                "summary": "Returns the user with ID",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "id of the user",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "tags": [
                    "user"
                ]
            },
            "patch": {
                "operationId": "UserController_update",
                "summary": "Not implemented",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "user"
                ]
            },
            "delete": {
                "operationId": "UserController_remove",
                "summary": "Not implemented",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "user"
                ]
            }
        },
        "/api/auth/login": {
            "post": {
                "operationId": "AuthController_login",
                "summary": "Login a user",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginUserLocalDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in. Sets the cookie and returns the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/api/auth/register": {
            "post": {
                "operationId": "AuthController_register",
                "summary": "Register a new user",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterUserDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered. Sets the cookie and returns the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/api/auth/logout": {
            "put": {
                "operationId": "AuthController_logout",
                "summary": "Logout a user",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "User logged out. Clears the cookie"
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/api/auth/profile": {
            "get": {
                "operationId": "AuthController_profile",
                "summary": "Get the profile of a user",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Returns the profile of the user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/api/book/isbn": {
            "post": {
                "operationId": "BookController_create",
                "summary": "Creates a new book for the logged-in user from ISBN",
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateBookISBNDto"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Book not found"
                    }
                },
                "tags": [
                    "book"
                ]
            }
        },
        "/api/book": {
            "get": {
                "operationId": "BookController_findAll",
                "summary": "Returns all books in the DB",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "All books",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Book"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "book"
                ]
            }
        },
        "/api/book/{id}": {
            "get": {
                "operationId": "BookController_findOne",
                "summary": "Returns the book with ID",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "id of the book",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The book",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Book"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Book not found"
                    }
                },
                "tags": [
                    "book"
                ]
            },
            "patch": {
                "operationId": "BookController_update",
                "summary": "Not implemented",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBookDto"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "book"
                ]
            },
            "delete": {
                "operationId": "BookController_remove",
                "summary": "Deletes the book with ID",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "description": "id of the book",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deleted book id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Book not found"
                    }
                },
                "tags": [
                    "book"
                ]
            }
        },
        "/api/borrow/reserve/{bookId}": {
            "post": {
                "operationId": "BorrowController_reserve",
                "summary": "Tries to reserve the book",
                "parameters": [
                    {
                        "name": "bookId",
                        "required": true,
                        "in": "path",
                        "description": "id of the book to reserve",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Reservation created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BookReservation"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Book already borrowed"
                    },
                    "404": {
                        "description": "Book not found"
                    }
                },
                "tags": [
                    "borrow"
                ]
            }
        },
        "/api/borrow/reservations/book/{bookId}": {
            "get": {
                "operationId": "BorrowController_getBookReservations",
                "summary": "Returns all userIds that reserved this book",
                "parameters": [
                    {
                        "name": "bookId",
                        "required": true,
                        "in": "path",
                        "description": "id of the book",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All reservations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BookReservation"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Book not found"
                    }
                },
                "tags": [
                    "borrow"
                ]
            }
        },
        "/api/borrow/reservations/user/{userId}": {
            "get": {
                "operationId": "BorrowController_getUserReservations",
                "summary": "Returns all reservations for books owned by userId",
                "parameters": [
                    {
                        "name": "userId",
                        "required": true,
                        "in": "path",
                        "description": "id of the user",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All reservations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BookReservation"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "tags": [
                    "borrow"
                ]
            }
        },
        "/api/friends/{id}": {
            "post": {
                "operationId": "FriendsController_create",
                "summary": "Create a new friendship",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": ""
                    }
                },
                "tags": [
                    "Friends (oz. v ednini zame :( )"
                ]
            },
            "delete": {
                "operationId": "FriendsController_delete",
                "summary": "Delete a friendship",
                "parameters": [
                    {
                        "name": "id",
                        "required": true,
                        "in": "path",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                },
                "tags": [
                    "Friends (oz. v ednini zame :( )"
                ]
            }
        },
        "/api/friends": {
            "get": {
                "operationId": "FriendsController_search",
                "summary": "Search for new friends",
                "description": "Search for new friends. Excludes already made friends",
                "parameters": [
                    {
                        "name": "search",
                        "required": true,
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "Friends (oz. v ednini zame :( )"
                ]
            }
        }
    },
    "info": {
        "title": "DH - Piskotki",
        "description": "API for DH - Piskotki",
        "version": "1.0",
        "contact": {}
    },
    "tags": [],
    "servers": [],
    "components": {
        "schemas": {
            "BookStatus": {
                "type": "string",
                "enum": [
                    "AVAILABLE",
                    "BORROWED",
                    "IN_TRANSTT",
                    "LOST"
                ]
            },
            "Achievement": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "points": {
                        "type": "number"
                    },
                    "User": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                },
                "required": [
                    "id",
                    "createdAt",
                    "updatedAt",
                    "name",
                    "description",
                    "points",
                    "User"
                ]
            },
            "UserReview": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "rating": {
                        "type": "number"
                    },
                    "review": {
                        "type": "string"
                    },
                    "author": {
                        "$ref": "#/components/schemas/User"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "subject": {
                        "$ref": "#/components/schemas/User"
                    },
                    "subjectId": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "createdAt",
                    "updatedAt",
                    "rating",
                    "review",
                    "author",
                    "userId",
                    "subject",
                    "subjectId"
                ]
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "numberOfBooksBorrowed": {
                        "type": "number"
                    },
                    "ownedBooks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Book"
                        }
                    },
                    "borrowedBooks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Book"
                        }
                    },
                    "friendsTo": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "friendsFrom": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "achievements": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Achievement"
                        }
                    },
                    "reviewsProfile": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserReview"
                        }
                    },
                    "reviewsLeft": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserReview"
                        }
                    },
                    "reservations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BookReservation"
                        }
                    }
                },
                "required": [
                    "id",
                    "createdAt",
                    "updatedAt",
                    "email",
                    "password",
                    "firstName",
                    "lastName",
                    "numberOfBooksBorrowed",
                    "ownedBooks",
                    "borrowedBooks",
                    "friendsTo",
                    "friendsFrom",
                    "achievements",
                    "reviewsProfile",
                    "reviewsLeft",
                    "reservations"
                ]
            },
            "BookReservation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "book": {
                        "$ref": "#/components/schemas/Book"
                    },
                    "bookId": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "createdAt",
                    "updatedAt",
                    "book",
                    "bookId",
                    "user",
                    "userId"
                ]
            },
            "Book": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "updatedAt": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/BookStatus"
                    },
                    "title": {
                        "type": "string"
                    },
                    "author": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "coverUrl": {
                        "type": "string"
                    },
                    "isbn": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    },
                    "reservations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BookReservation"
                        }
                    },
                    "owner": {
                        "$ref": "#/components/schemas/User"
                    },
                    "ownerId": {
                        "type": "string"
                    },
                    "borrower": {
                        "$ref": "#/components/schemas/User"
                    },
                    "borrowerId": {
                        "type": "string"
                    },
                    "borrowDate": {
                        "format": "date-time",
                        "type": "string"
                    },
                    "returnDate": {
                        "format": "date-time",
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "createdAt",
                    "updatedAt",
                    "status",
                    "title",
                    "author",
                    "description",
                    "coverUrl",
                    "isbn",
                    "reservations",
                    "owner",
                    "ownerId"
                ]
            },
            "UpdateUserDto": {
                "type": "object",
                "properties": {}
            },
            "LoginUserLocalDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "matej@piskotki.si"
                    },
                    "password": {
                        "type": "string",
                        "example": "secret"
                    }
                },
                "required": [
                    "email",
                    "password"
                ]
            },
            "RegisterUserDto": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "example": "matej@piskotki.si"
                    },
                    "password": {
                        "type": "string",
                        "example": "secret"
                    },
                    "firstName": {
                        "type": "string",
                        "example": "Matej"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "Piskotki"
                    }
                },
                "required": [
                    "email",
                    "password",
                    "firstName",
                    "lastName"
                ]
            },
            "CreateBookISBNDto": {
                "type": "object",
                "properties": {
                    "isbn": {
                        "type": "string",
                        "example": "9780316029186"
                    }
                },
                "required": [
                    "isbn"
                ]
            },
            "UpdateBookDto": {
                "type": "object",
                "properties": {}
            }
        }
    }
}